#@ load("@ytt:template", "template")
#@ load("@ytt:data", "data")

#@ load("/components/ui/adaptagrams.lib.yml", "adaptagrams_component")
#@ load("/components/ui/cold_revng.lib.yml", "cold_revng_component")
#@ load("/components/ui/mesa.lib.yml", "mesa_component")
#@ load("/components/ui/libglvnd.lib.yml", "libglvnd_component")

#@ load("/components/toolchain/arch/host.lib.yml", "host_toolchain_components")
#@ load("/components/toolchain/arch/x86_64.lib.yml", "x86_64_toolchain_components")
#@ load("/components/toolchain/arch/i386.lib.yml", "i386_toolchain_components")
#@ load("/components/toolchain/arch/arm.lib.yml", "arm_toolchain_components")
#@ load("/components/toolchain/arch/aarch64.lib.yml", "aarch64_toolchain_components")
#@ load("/components/toolchain/arch/s390x.lib.yml", "s390x_toolchain_components")
#@ load("/components/toolchain/arch/mips.lib.yml", "mips_toolchain_components")
#@ load("/components/toolchain/arch/mipsel.lib.yml", "mipsel_toolchain_components")
#@ load("/components/toolchain/arch/win32.lib.yml", "win32_toolchain_components")
#@ load("/components/toolchain/arch/win64.lib.yml", "win64_toolchain_components")

#@ load("/components/macos/macos.lib.yml", "macos_toolchain_components")

#@ load("/global_options.lib.yml", "options")
components:
  ui/adaptagrams: #@ adaptagrams_component
  ui/cold-revng: #@ cold_revng_component
  ui/mesa: #@ mesa_component
  ui/libglvnd: #@ libglvnd_component

  _: #@ template.replace(host_toolchain_components)
  _: #@ template.replace(x86_64_toolchain_components)
  _: #@ template.replace(i386_toolchain_components)
  _: #@ template.replace(arm_toolchain_components)
  _: #@ template.replace(aarch64_toolchain_components)
  _: #@ template.replace(s390x_toolchain_components)
  _: #@ template.replace(mips_toolchain_components)
  _: #@ template.replace(mipsel_toolchain_components)

  _: #@ template.replace(win64_toolchain_components)
  _: #@ template.replace(win32_toolchain_components)

  _: #@ template.replace(macos_toolchain_components)

add_to_path:
  - $ORCHESTRA_ROOT/bin
  - $ORCHESTRA_DOTDIR/support
environment:
  - PATCH_DIR: $ORCHESTRA_DOTDIR/patches
  - JOBS: #@ str(data.values.parallelism)
  #! TODO: maybe patching RPATH should not be a concern of Orchestra itself, but rather a post-install phase
  #!       Otherwise, it should be Orchestra to provide an RPATH_PLACEHOLDER, not the other way around
  - RPATH_PLACEHOLDER: #@ options["rpath_placeholder"]
  - QML2_IMPORT_PATH: $ORCHESTRA_ROOT/qml
  - QT_PLUGIN_PATH: $ORCHESTRA_ROOT/plugins
  - PKG_CONFIG_PATH: $ORCHESTRA_ROOT/lib/pkgconfig:$ORCHESTRA_ROOT/share/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}
  - INSTALL_LINK_ONLY_PATH: $ORCHESTRA_ROOT/link-only
  - LIBGL_DRIVERS_PATH: $ORCHESTRA_ROOT/lib/dri${LIBGL_DRIVERS_PATH:+:${LIBGL_DRIVERS_PATH}}
  - PYTHONPATH: $ORCHESTRA_ROOT/lib/python${PYTHONPATH:+:${PYTHONPATH}}

paths: #@ data.values.paths or {}
remote_base_urls: #@ data.values.remote_base_urls or []
binary_archives: #@ data.values.binary_archives or []
